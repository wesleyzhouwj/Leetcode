/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    // public List<List<Integer>> levelOrder(TreeNode root) {
    //     List<List<Integer>>res = new ArrayList<>();
    //     if(root == null)return res;
    //     Queue<TreeNode>q = new LinkedList<>();
    //     q.offer(root);
    //     while(!q.isEmpty()){
    //         int size = q.size();
    //         List<Integer>cur = new ArrayList<>();
    //         for(int i=0;i<size;i++){
    //             TreeNode node = q.poll();
    //             cur.add(node.val);
    //             if(node.left != null)q.offer(node.left);
    //             if(node.right != null)q.offer(node.right);
    //         }
    //         res.add(cur);
    //     }
    //     return res;
    // }
    List<List<Integer>>res = new ArrayList<>();
    public List<List<Integer>> levelOrder(TreeNode root) {
        preOrder(root,0);
        return res;
    }
    private void preOrder(TreeNode node, int levels){
        if(node == null)return;
        if(res.size() <= levels){
            res.add(new ArrayList<>());
        }
        res.get(levels).add(node.val);
        preOrder(node.left,levels+1);
        preOrder(node.right,levels+1);
    }
}
