class MinStack {
    Stack<Integer>minStack;
    Stack<Integer>stack;
    
    /** initialize your data structure here. */
    public MinStack() {
        minStack = new Stack<>();
        stack = new Stack<>();
    }
    
    public void push(int x) {
        if(stack.empty()){
            stack.push(x);
            minStack.push(x);
        }else{
            stack.push(x);
            if(x <= minStack.peek()){
                minStack.push(x);
            }
        }  
        // stack.push(x);
        // if(minStack.empty() || x <= minStack.peek())minStack.push(x);
        
    }
    
    public void pop() {
//         if(stack.peek() == minStack.peek()){
//             minStack.pop();
            
//         }   
//         stack.pop();
        
        int x=stack.pop();
        if(!minStack.empty() && x==minStack.peek()) minStack.pop();
    }
    
    public int top() {
        return stack.peek();
    }
    
    public int getMin() {
        return minStack.peek();
    }
}
