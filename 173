/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */

public class BSTIterator {       //这题相当于树的非递归中序遍历，因为每个元素进栈，出栈各一次，所以平均时间是O（1）

    Stack<TreeNode>stack = new Stack<>();
    public BSTIterator(TreeNode root) {
        TreeNode cur = root;
        while(cur != null){
            stack.push(cur);
            cur = cur.left;
        }
    }

    /** @return whether we have a next smallest number */
    public boolean hasNext() {
        return !stack.empty();
    }

    /** @return the next smallest number */
    public int next() {
        if(stack.empty())return -1;
        TreeNode top = stack.pop();
        TreeNode topRight = top.right;
        while(topRight!=null){
            stack.push(topRight);
            topRight = topRight.left;
        }
        return top.val;
    }
}
