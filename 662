/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int widthOfBinaryTree(TreeNode root) {
        if(root == null)return 0;
        Queue<TreeNode>q = new LinkedList<>();
        Map<TreeNode,Integer>map = new HashMap<>();
        q.offer(root);
        map.put(root,0);
        int left = 0;
        int max = 0;
        while(!q.isEmpty()){
            int len = q.size();
            left = map.get(q.peek());
            for(int i=0;i<len;i++){
                TreeNode p = q.poll();
                int pos = map.get(p);
                max = Math.max(max,pos-left+1);
                
                if(p.left != null){
                    q.offer(p.left);
                    map.put(p.left,pos*2);
                }
                
                if(p.right != null){
                    q.offer(p.right);
                    map.put(p.right,pos*2+1);
                }
            }
        }
        return max;
    }
    
